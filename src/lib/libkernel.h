#pragma once

// Params should go here....

// code goes here
// example ABI_SYSV int test(int input);
void __elf_phdr_match_addr();
void __error();
void __inet_ntop();
void __inet_pton();
void __progname();
void __pthread_cleanup_pop_imp();
void __pthread_cleanup_push_imp();
void __pthread_cxa_finalize();
void __sceKernelGetGPI();
void __stack_chk_fail();
void __stack_chk_guard();
void __sys_debug_init();
void __sys_dl_get_info();
void __sys_dl_get_list();
void __sys_dl_get_metadata();
void __sys_dynlib_get_info_for_libdbg();
void __sys_dynlib_get_info2();
void __sys_dynlib_get_list_for_libdbg();
void __sys_dynlib_get_list2();
void __sys_dynlib_load_prx();
void __sys_get_proc_type_info();
void __sys_is_development_mode();
void __sys_kqueueex();
void __sys_namedobj_create();
void __sys_namedobj_delete();
void __sys_netabort();
void __sys_netcontrol();
void __sys_netgetiflist();
void __sys_netgetsockinfo();
void __sys_opmc_disable();
void __sys_opmc_enable();
void __sys_opmc_get_ctr();
void __sys_opmc_get_hw();
void __sys_opmc_set_ctl();
void __sys_opmc_set_ctr();
void __sys_opmc_set_hw();
void __sys_osem_close();
void __sys_osem_open();
void __sys_randomized_path();
void __sys_rdup();
void __sys_regmgr_call();
void __sys_set_uevt();
void __sys_socketclose();
void __sys_socketex();
void __sys_test_debug_rwmem();
void __sys_workaround8849();
void __tls_get_addr();
void __Ux86_64_setcontext();
void _accept();
void _bind();
void _close();
void _connect();
void _dup2();
void _execve();
void _execvpe();
void _exit();
void _fcntl();
void _fpathconf();
void _fstat();
void _fstatfs();
void _getdirentries();
void _getpeername();
void _getsockname();
void _getsockopt();
void _ioctl();
void _is_signal_return();
void _listen();
void _nanosleep();
void _open();
void _openat();
void _read();
void _readv();
void _recvfrom();
void _recvmsg();
void _sceKernelRtldSetApplicationHeapAPI();
void _sceKernelRtldThreadAtexitDecrement();
void _sceKernelRtldThreadAtexitIncrement();
void _sceKernelSetThreadAtexitCount();
void _sceKernelSetThreadAtexitReport();
void _sceKernelSetThreadDtors();
void _sendmsg();
void _sendto();
void _setsockopt();
void _sigaction();
void _sigintr();
void _sigprocmask();
void _sigsuspend();
void _umtx_op();
void _wait4();
void _write();
void _writev();
void accept();
void access();
void amd64_set_fsbase();
void bind();
void blockpool_batch();
void blockpool_map();
void blockpool_open();
void blockpool_unmap();
void chdir();
void chflags();
void chmod();
void clock_getres();
void clock_gettime();
void clock_settime();
void close();
void connect();
void cpuset_getaffinity();
void cpuset_getid();
void cpuset_setaffinity();
void creat();
void dlclose();
void dlerror();
void dlopen();
void dlsym();
void dup();
void dup2();
void dynlib_get_obj_member();
void environ();
void errno();
void execv();
void execve();
void execvp();
void fchflags();
void fchmod();
void fcntl();
void fdatasync();
void flock();
void fstat();
void fsync();
void ftruncate();
void futimes();
void get_authinfo();
void get_module_info_list();
void get_page_table_stats();
void get_sdk_compiled_version();
void get_self_auth_info();
void get_vm_map_timestamp();
void getargc();
void getargv();
void getcontext();
void getdents();
void getdirentries();
void getdtablesize();
void getegid();
void geteuid();
void getgid();
void getgroups();
void getitimer();
void getlogin();
void getlogin_r();
void getpagesize();
void getpeername();
void getpid();
void getppid();
void getpriority();
void getrlimit();
void getrusage();
void getsid();
void getsockname();
void getsockopt();
void gettimeofday();
void getuid();
void htonl();
void htons();
void inet_ntop();
void inet_pton();
void ioctl();
void ipmimgr_call();
void is_in_sandbox();
void issetugid();
void kevent();
void kill();
void kqueue();
void ksem_close();
void ksem_destroy();
void ksem_getvalue();
void ksem_init();
void ksem_open();
void ksem_post();
void ksem_timedwait();
void ksem_trywait();
void ksem_unlink();
void ksem_wait();
void ktimer_create();
void ktimer_delete();
void ktimer_getoverrun();
void ktimer_gettime();
void ktimer_settime();
void listen();
void lseek();
void lstat();
void madvise();
void mdbg_service();
void mincore();
void mkdir();
void mlock();
void mlockall();
void mmap();
void mprotect();
void msync();
void munlock();
void munlockall();
void munmap();
void nanosleep();
void ntohl();
void ntohs();
void open();
void pause();
void physhm_open();
void physhm_unlink();
void pipe();
void poll();
void pread();
void preadv();
void profil();
void pselect();
void pthread_atfork();
void pthread_attr_destroy();
void pthread_attr_get_np();
void pthread_attr_getaffinity_np();
void pthread_attr_getdetachstate();
void pthread_attr_getguardsize();
void pthread_attr_getinheritsched();
void pthread_attr_getschedparam();
void pthread_attr_getschedpolicy();
void pthread_attr_getscope();
void pthread_attr_getstack();
void pthread_attr_getstackaddr();
void pthread_attr_getstacksize();
void pthread_attr_init();
void pthread_attr_setaffinity_np();
void pthread_attr_setcreatesuspend_np();
void pthread_attr_setdetachstate();
void pthread_attr_setguardsize();
void pthread_attr_setinheritsched();
void pthread_attr_setschedparam();
void pthread_attr_setschedpolicy();
void pthread_attr_setscope();
void pthread_attr_setstack();
void pthread_attr_setstackaddr();
void pthread_attr_setstacksize();
void pthread_barrier_destroy();
void pthread_barrier_init();
void pthread_barrier_setname_np();
void pthread_barrier_wait();
void pthread_barrierattr_destroy();
void pthread_barrierattr_getpshared();
void pthread_barrierattr_init();
void pthread_barrierattr_setpshared();
void pthread_cancel();
void pthread_cleanup_pop();
void pthread_cleanup_push();
void pthread_cond_broadcast();
void pthread_cond_destroy();
void pthread_cond_init();
void pthread_cond_reltimedwait_np();
void pthread_cond_setname_np();
void pthread_cond_signal();
void pthread_cond_signalto_np();
void pthread_cond_timedwait();
void pthread_cond_wait();
void pthread_condattr_destroy();
void pthread_condattr_getclock();
void pthread_condattr_getpshared();
void pthread_condattr_init();
void pthread_condattr_setclock();
void pthread_condattr_setpshared();
void pthread_create();
void pthread_create_name_np();
void pthread_detach();
void pthread_equal();
void pthread_exit();
void pthread_get_specificarray_np();
void pthread_get_user_context_np();
void pthread_getaffinity_np();
void pthread_getconcurrency();
void pthread_getcpuclockid();
void pthread_getname_np();
void pthread_getprio();
void pthread_getschedparam();
void pthread_getspecific();
void pthread_getthreadid_np();
void pthread_join();
void pthread_key_create();
void pthread_key_delete();
void pthread_kill();
void pthread_main_np();
void pthread_multi_np();
void pthread_mutex_destroy();
void pthread_mutex_getprioceiling();
void pthread_mutex_getspinloops_np();
void pthread_mutex_getyieldloops_np();
void pthread_mutex_init();
void pthread_mutex_init_for_mono();
void pthread_mutex_isowned_np();
void pthread_mutex_lock();
void pthread_mutex_reltimedlock_np();
void pthread_mutex_setname_np();
void pthread_mutex_setprioceiling();
void pthread_mutex_setspinloops_np();
void pthread_mutex_setyieldloops_np();
void pthread_mutex_timedlock();
void pthread_mutex_trylock();
void pthread_mutex_unlock();
void pthread_mutexattr_destroy();
void pthread_mutexattr_getkind_np();
void pthread_mutexattr_getprioceiling();
void pthread_mutexattr_getprotocol();
void pthread_mutexattr_getpshared();
void pthread_mutexattr_gettype();
void pthread_mutexattr_init();
void pthread_mutexattr_setkind_np();
void pthread_mutexattr_setprioceiling();
void pthread_mutexattr_setprotocol();
void pthread_mutexattr_setpshared();
void pthread_mutexattr_settype();
void pthread_once();
void pthread_rename_np();
void pthread_resume_all_np();
void pthread_resume_np();
void pthread_resume_user_context_np();
void pthread_rwlock_destroy();
void pthread_rwlock_init();
void pthread_rwlock_rdlock();
void pthread_rwlock_reltimedrdlock_np();
void pthread_rwlock_reltimedwrlock_np();
void pthread_rwlock_setname_np();
void pthread_rwlock_timedrdlock();
void pthread_rwlock_timedwrlock();
void pthread_rwlock_tryrdlock();
void pthread_rwlock_trywrlock();
void pthread_rwlock_unlock();
void pthread_rwlock_wrlock();
void pthread_rwlockattr_destroy();
void pthread_rwlockattr_getpshared();
void pthread_rwlockattr_gettype_np();
void pthread_rwlockattr_init();
void pthread_rwlockattr_setpshared();
void pthread_rwlockattr_settype_np();
void pthread_self();
void pthread_set_defaultstacksize_np();
void pthread_set_name_np();
void pthread_set_user_context_np();
void pthread_setaffinity_np();
void pthread_setcancelstate();
void pthread_setcanceltype();
void pthread_setconcurrency();
void pthread_setprio();
void pthread_setschedparam();
void pthread_setspecific();
void pthread_sigmask();
void pthread_single_np();
void pthread_spin_destroy();
void pthread_spin_init();
void pthread_spin_lock();
void pthread_spin_trylock();
void pthread_spin_unlock();
void pthread_suspend_all_np();
void pthread_suspend_np();
void pthread_suspend_user_context_np();
void pthread_switch_add_np();
void pthread_switch_delete_np();
void pthread_testcancel();
void pthread_timedjoin_np();
void pthread_yield();
void pwrite();
void pwritev();
void raise();
void read();
void readv();
void recv();
void recvfrom();
void recvmsg();
void rename();
void rfork_thread();
void rmdir();
void rtld_printf();
void rtprio_thread();
void sceKernelAddFileEvent();
void sceKernelAddGpuExceptionEvent();
void sceKernelAddHRTimerEvent();
void sceKernelAddReadEvent();
void sceKernelAddTimerEvent();
void sceKernelAddUserEvent();
void sceKernelAddUserEventEdge();
void sceKernelAddWriteEvent();
void sceKernelAioCancelRequest();
void sceKernelAioCancelRequests();
void sceKernelAioDeleteRequest();
void sceKernelAioDeleteRequests();
void sceKernelAioInitializeImpl();
void sceKernelAioInitializeParam();
void sceKernelAioPollRequest();
void sceKernelAioPollRequests();
void sceKernelAioSetParam();
void sceKernelAioSubmitReadCommands();
void sceKernelAioSubmitReadCommandsMultiple();
void sceKernelAioSubmitWriteCommands();
void sceKernelAioSubmitWriteCommandsMultiple();
void sceKernelAioWaitRequest();
void sceKernelAioWaitRequests();
void sceKernelAllocateDirectMemory();
void sceKernelAllocateDirectMemoryForMiniApp();
void sceKernelAllocateMainDirectMemory();
void sceKernelAllocateTraceDirectMemory();
void sceKernelAvailableDirectMemorySize();
void sceKernelAvailableFlexibleMemorySize();
void sceKernelBacktraceSelf();
void sceKernelBatchMap();
void sceKernelBatchMap2();
void sceKernelCancelEventFlag();
void sceKernelCancelSema();
void sceKernelCheckedReleaseDirectMemory();
void sceKernelCheckReachability();
void sceKernelChmod();
void sceKernelClearBootReqNotifyCount();
void sceKernelClearEventFlag();
void sceKernelClearGameDirectMemory();
void sceKernelClockGetres();
void sceKernelClockGettime();
void sceKernelClose();
void sceKernelCloseEport();
void sceKernelCloseEventFlag();
void sceKernelCloseSema();
void sceKernelConvertLocaltimeToUtc();
void sceKernelConvertUtcToLocaltime();
void sceKernelCreateEport();
void sceKernelCreateEqueue();
void sceKernelCreateEventFlag();
void sceKernelCreateSema();
void sceKernelDebugAcquireAndUpdateDebugRegister();
void sceKernelDebugGetAppStatus();
void sceKernelDebugGetPauseCount();
void sceKernelDebugGpuPaDebugIsInProgress();
void sceKernelDebugOutText();
void sceKernelDebugRaiseException();
void sceKernelDebugRaiseExceptionOnReleaseMode();
void sceKernelDebugRaiseExceptionWithContext();
void sceKernelDebugRaiseExceptionWithInfo();
void sceKernelDebugReleaseDebugContext();
void sceKernelDeleteEport();
void sceKernelDeleteEqueue();
void sceKernelDeleteEventFlag();
void sceKernelDeleteFileEvent();
void sceKernelDeleteGpuExceptionEvent();
void sceKernelDeleteHRTimerEvent();
void sceKernelDeleteReadEvent();
void sceKernelDeleteSema();
void sceKernelDeleteTimerEvent();
void sceKernelDeleteUserEvent();
void sceKernelDeleteWriteEvent();
void sceKernelDirectMemoryQuery();
void sceKernelDirectMemoryQueryForId();
void sceKernelDlsym();
void sceKernelEnableDmemAliasing();
void sceKernelEnableDmemAliasing2();
void sceKernelEnablePthreadObjectCheck();
void sceKernelError();
void sceKernelEventLogInit();
void sceKernelEventLogPread();
void sceKernelEventLogRead();
void sceKernelEventLogWrite();
void sceKernelFchmod();
void sceKernelFcntl();
void sceKernelFdatasync();
void sceKernelFlock();
void sceKernelFstat();
void sceKernelFsync();
void sceKernelFtruncate();
void sceKernelFutimes();
void sceKernelGetAllowedSdkVersionOnSystem();
void sceKernelGetAppInfo();
void sceKernelGetAslrStatus();
void sceKernelGetBackupRestoreMode();
void sceKernelGetBackupRestoreModeOfNextBoot();
void sceKernelGetBasicProductShape();
void sceKernelGetBioUsageAll();
void sceKernelGetBootReqNotifyCount();
void sceKernelGetCallRecord();
void sceKernelGetCompiledSdkVersion();
void sceKernelGetCompiledSdkVersionByPath();
void sceKernelGetCompiledSdkVersionByPid();
void sceKernelGetCpuFrequency();
void sceKernelGetCpumode();
void sceKernelGetCpumodeGame();
void sceKernelGetCpuTemperature();
void sceKernelGetCpuUsage();
void sceKernelGetCpuUsageAll();
void sceKernelGetCpuUsageProc();
void sceKernelGetCpuUsageProc2();
void sceKernelGetCurrentCpu();
void sceKernelGetDataTransferMode();
void sceKernelGetdents();
void sceKernelGetDirectMemorySize();
void sceKernelGetDirectMemoryType();
void sceKernelGetdirentries();
void sceKernelGetEventData();
void sceKernelGetEventError();
void sceKernelGetEventFflags();
void sceKernelGetEventFilter();
void sceKernelGetEventId();
void sceKernelGetEventUserData();
void sceKernelGetExecutableModuleHandle();
void sceKernelGetExtLibcHandle();
void sceKernelGetFsSandboxRandomWord();
void sceKernelGetGPI();
void sceKernelGetGPO();
void sceKernelGetHwFeatureInfoForDecid();
void sceKernelGetIdPs();
void sceKernelGetIdTableCurrentCount();
void sceKernelGetIpcPath();
void sceKernelGetLibkernelTextLocation();
void sceKernelGetMainSocId();
void sceKernelGetModuleInfo();
void sceKernelGetModuleInfoForUnwind();
void sceKernelGetModuleInfoFromAddr();
void sceKernelGetModuleInfoInternal();
void sceKernelGetModuleList();
void sceKernelGetModuleListInternal();
void sceKernelGetOpenPsIdForSystem();
void sceKernelGetPageTableStats();
void sceKernelGetPagingStatsOfAllObjects();
void sceKernelGetPagingStatsOfAllThreads();
void sceKernelGetProcessName();
void sceKernelGetProcessTime();
void sceKernelGetProcessTimeCounter();
void sceKernelGetProcessTimeCounterFrequency();
void sceKernelGetProcessType();
void sceKernelGetProcParam();
void sceKernelGetProductCode();
void sceKernelGetProductStr();
void sceKernelGetPrtAperture();
void sceKernelGetRenderingMode();
void sceKernelGetResidentCount();
void sceKernelGetResidentFmemCount();
void sceKernelGetSafemode();
void sceKernelGetSanitizerMallocReplace();
void sceKernelGetSanitizerMallocReplaceExternal();
void sceKernelGetSanitizerNewReplace();
void sceKernelGetSanitizerNewReplaceExternal();
void sceKernelGetSocPowerConsumption();
void sceKernelGetSocSensorTemperature();
void sceKernelGetSubsysId();
void sceKernelGetSystemExVersion();
void sceKernelGetSystemSwBeta();
void sceKernelGetSystemSwVersion();
void sceKernelGetThreadName();
void sceKernelGettimeofday();
void sceKernelGettimezone();
void sceKernelGetTraceMemoryStats();
void sceKernelGetTscFrequency();
void sceKernelGetVrCaptureSize();
void sceKernelHasNeoMode();
void sceKernelHwHasOpticalOut();
void sceKernelHwHasWlanBt();
void sceKernelIccControlBDPowerState();
void sceKernelIccControlUSBPowerState();
void sceKernelIccGetBDPowerState();
void sceKernelIccGetCountTime();
void sceKernelIccGetCPMode();
void sceKernelIccGetCpuInfoBit();
void sceKernelIccGetErrLog();
void sceKernelIccGetHwInfo();
void sceKernelIccGetPowerNumberOfBootShutdown();
void sceKernelIccGetPowerOperatingTime();
void sceKernelIccGetPowerUpCause();
void sceKernelIccGetSysEventLog();
void sceKernelIccGetThermalAlert();
void sceKernelIccGetUSBPowerState();
void sceKernelIccIndicatorBootDone();
void sceKernelIccIndicatorShutdown();
void sceKernelIccIndicatorStandby();
void sceKernelIccIndicatorStandbyBoot();
void sceKernelIccIndicatorStandbyShutdown();
void sceKernelIccNotifyBootStatus();
void sceKernelIccNvsFlush();
void sceKernelIccReadPowerBootMessage();
void sceKernelIccSetBuzzer();
void sceKernelIccSetCPMode();
void sceKernelIccSetCpuInfoBit();
void sceKernelIccSetDownloadMode();
void sceKernelInstallExceptionHandler();
void sceKernelInternalGetKmemStatistics();
void sceKernelInternalGetMapStatistics();
void sceKernelInternalHeapPrintBacktraceWithModuleInfo();
void sceKernelInternalMapDirectMemory();
void sceKernelInternalMapNamedDirectMemory();
void sceKernelInternalMemoryGetAvailableSize();
void sceKernelInternalMemoryGetModuleSegmentInfo();
void sceKernelInternalResumeDirectMemoryRelease();
void sceKernelInternalSuspendDirectMemoryRelease();
void sceKernelIsAddressSanitizerEnabled();
void sceKernelIsAllowedToSelectDvdRegion();
void sceKernelIsAuthenticNeo();
void sceKernelIsCEX();
void sceKernelIsDebuggerAttached();
void sceKernelIsDevKit();
void sceKernelIsGenuineCEX();
void sceKernelIsGenuineDevKit();
void sceKernelIsGenuineKratosCex();
void sceKernelIsGenuineN();
void sceKernelIsGenuineTestKit();
void sceKernelIsInSandbox();
void sceKernelIsKratos();
void sceKernelIsMainOnStanbyMode();
void sceKernelIsMainOnStandbyMode();
void sceKernelIsNeoMode();
void sceKernelIsStack();
void sceKernelIsTestKit();
void sceKernelJitCreateAliasOfSharedMemory();
void sceKernelJitCreateSharedMemory();
void sceKernelJitGetSharedMemoryInfo();
void sceKernelJitMapSharedMemory();
void sceKernelKernelHeapUsage();
void sceKernelLoadStartModule();
void sceKernelLoadStartModuleForSysmodule();
void sceKernelLseek();
void sceKernelLwfsAllocateBlock();
void sceKernelLwfsLseek();
void sceKernelLwfsSetAttribute();
void sceKernelLwfsTrimBlock();
void sceKernelLwfsWrite();
void sceKernelMapDirectMemory();
void sceKernelMapDirectMemory2();
void sceKernelMapFlexibleMemory();
void sceKernelMapNamedDirectMemory();
void sceKernelMapNamedFlexibleMemory();
void sceKernelMapNamedSystemFlexibleMemory();
void sceKernelMapSanitizerShadowMemory();
void sceKernelMapTraceMemory();
void sceKernelMemoryPoolBatch();
void sceKernelMemoryPoolCommit();
void sceKernelMemoryPoolDecommit();
void sceKernelMemoryPoolExpand();
void sceKernelMemoryPoolGetBlockStats();
void sceKernelMemoryPoolReserve();
void sceKernelMkdir();
void sceKernelMlock();
void sceKernelMlockall();
void sceKernelMmap();
void sceKernelMprotect();
void sceKernelMsync();
void sceKernelMtypeprotect();
void sceKernelMunlock();
void sceKernelMunlockall();
void sceKernelMunmap();
void sceKernelNanosleep();
void sceKernelNormalizePath();
void sceKernelNotifyAppStateChanged();
void sceKernelNotifySystemSuspendResumeProgress();
void sceKernelNotifySystemSuspendStart();
void sceKernelOpen();
void sceKernelOpenEport();
void sceKernelOpenEventFlag();
void sceKernelOpenSema();
void sceKernelPollEventFlag();
void sceKernelPollSema();
void sceKernelPread();
void sceKernelPreadv();
void sceKernelPrintBacktraceWithModuleInfo();
void sceKernelProtectDirectMemory();
void sceKernelProtectDirectMemoryForPID();
void sceKernelPwrite();
void sceKernelPwritev();
void sceKernelQueryMemoryProtection();
void sceKernelQueryTraceMemory();
void sceKernelRaiseException();
void sceKernelRandomizedPath();
void sceKernelRdup();
void sceKernelRead();
void sceKernelReadTsc();
void sceKernelReadv();
void sceKernelReboot();
void sceKernelReleaseDirectMemory();
void sceKernelReleaseFlexibleMemory();
void sceKernelReleaseTraceDirectMemory();
void sceKernelRemoveExceptionHandler();
void sceKernelRename();
void sceKernelReportUnpatchedFunctionCall();
void sceKernelReserveSystemDirectMemory();
void sceKernelReserveVirtualRange();
void sceKernelResumeDirectMemoryRelease();
void sceKernelRmdir();
void sceKernelRtldControl();
void sceKernelSandboxPath();
void sceKernelSendNotificationRequest();
void sceKernelSetAppInfo();
void sceKernelSetBackupRestoreMode();
void sceKernelSetBaseModeClock();
void sceKernelSetBesteffort();
void sceKernelSetBootReqNotify();
void sceKernelSetCallRecord();
void sceKernelSetCompressionAttribute();
void sceKernelSetCpumodeGame();
void sceKernelSetDataTransferMode();
void sceKernelSetEventFlag();
void sceKernelSetFsstParam();
void sceKernelSetGameDirectMemoryLimit();
void sceKernelSetGPI();
void sceKernelSetGPO();
void sceKernelSetGpuCu();
void sceKernelSetMemoryPstate();
void sceKernelSetNeoModeClock();
void sceKernelSetPhysFmemLimit();
void sceKernelSetProcessName();
void sceKernelSetProcessProperty();
void sceKernelSetProcessPropertyString();
void sceKernelSetPrtAperture();
void sceKernelSetSafemode();
void sceKernelSettimeofday();
void sceKernelSetTimezoneInfo();
void sceKernelSetVirtualRangeName();
void sceKernelSetVmContainer();
void sceKernelSignalSema();
void sceKernelSleep();
void sceKernelStat();
void sceKernelStopUnloadModule();
void sceKernelSuspendDirectMemoryRelease();
void sceKernelSwitchToBaseMode();
void sceKernelSwitchToNeoMode();
void sceKernelSync();
void sceKernelTerminateSysCore();
void sceKernelTitleWorkaroundIsEnabled();
void sceKernelTitleWorkdaroundIsEnabled();
void sceKernelTraceMemoryTypeProtect();
void sceKernelTriggerEport();
void sceKernelTriggerUserEvent();
void sceKernelTruncate();
void sceKernelUnlink();
void sceKernelUsleep();
void sceKernelUtimes();
void sceKernelUuidCreate();
void sceKernelVirtualQuery();
void sceKernelWaitEqueue();
void sceKernelWaitEventFlag();
void sceKernelWaitSema();
void sceKernelWrite();
void sceKernelWriteSdkEventLog();
void sceKernelWritev();
void sceLibcMspaceCreateForMonoMutex();
void scePthreadAtfork();
void scePthreadAttrDestroy();
void scePthreadAttrGet();
void scePthreadAttrGetaffinity();
void scePthreadAttrGetdetachstate();
void scePthreadAttrGetguardsize();
void scePthreadAttrGetinheritsched();
void scePthreadAttrGetschedparam();
void scePthreadAttrGetschedpolicy();
void scePthreadAttrGetscope();
void scePthreadAttrGetstack();
void scePthreadAttrGetstackaddr();
void scePthreadAttrGetstacksize();
void scePthreadAttrInit();
void scePthreadAttrSetaffinity();
void scePthreadAttrSetcreatesuspend();
void scePthreadAttrSetdetachstate();
void scePthreadAttrSetguardsize();
void scePthreadAttrSetinheritsched();
void scePthreadAttrSetschedparam();
void scePthreadAttrSetschedpolicy();
void scePthreadAttrSetscope();
void scePthreadAttrSetstack();
void scePthreadAttrSetstackaddr();
void scePthreadAttrSetstacksize();
void scePthreadBarrierattrDestroy();
void scePthreadBarrierattrGetpshared();
void scePthreadBarrierattrInit();
void scePthreadBarrierattrSetpshared();
void scePthreadBarrierDestroy();
void scePthreadBarrierInit();
void scePthreadBarrierWait();
void scePthreadCancel();
void scePthreadCondattrDestroy();
void scePthreadCondattrGetclock();
void scePthreadCondattrGetpshared();
void scePthreadCondattrInit();
void scePthreadCondattrSetclock();
void scePthreadCondattrSetpshared();
void scePthreadCondBroadcast();
void scePthreadCondDestroy();
void scePthreadCondInit();
void scePthreadCondSignal();
void scePthreadCondSignalto();
void scePthreadCondTimedwait();
void scePthreadCondWait();
void scePthreadCreate();
void scePthreadDetach();
void scePthreadEqual();
void scePthreadExit();
void scePthreadGetaffinity();
void scePthreadGetconcurrency();
void scePthreadGetcpuclockid();
void scePthreadGetname();
void scePthreadGetprio();
void scePthreadGetschedparam();
void scePthreadGetspecific();
void scePthreadGetthreadid();
void scePthreadJoin();
void scePthreadKeyCreate();
void scePthreadKeyDelete();
void scePthreadMain();
void scePthreadMulti();
void scePthreadMutexattrDestroy();
void scePthreadMutexattrGetkind();
void scePthreadMutexattrGetprioceiling();
void scePthreadMutexattrGetprotocol();
void scePthreadMutexattrGetpshared();
void scePthreadMutexattrGettype();
void scePthreadMutexattrInit();
void scePthreadMutexattrInitForInternalLibc();
void scePthreadMutexattrSetkind();
void scePthreadMutexattrSetprioceiling();
void scePthreadMutexattrSetprotocol();
void scePthreadMutexattrSetpshared();
void scePthreadMutexattrSettype();
void scePthreadMutexDestroy();
void scePthreadMutexGetprioceiling();
void scePthreadMutexGetspinloops();
void scePthreadMutexGetyieldloops();
void scePthreadMutexInit();
void scePthreadMutexInitForInternalLibc();
void scePthreadMutexIsowned();
void scePthreadMutexLock();
void scePthreadMutexSetprioceiling();
void scePthreadMutexSetspinloops();
void scePthreadMutexSetyieldloops();
void scePthreadMutexTimedlock();
void scePthreadMutexTrylock();
void scePthreadMutexUnlock();
void scePthreadOnce();
void scePthreadRename();
void scePthreadResume();
void scePthreadResumeAll();
void scePthreadRwlockattrDestroy();
void scePthreadRwlockattrGetpshared();
void scePthreadRwlockattrGettype();
void scePthreadRwlockattrInit();
void scePthreadRwlockattrSetpshared();
void scePthreadRwlockattrSettype();
void scePthreadRwlockDestroy();
void scePthreadRwlockInit();
void scePthreadRwlockRdlock();
void scePthreadRwlockTimedrdlock();
void scePthreadRwlockTimedwrlock();
void scePthreadRwlockTryrdlock();
void scePthreadRwlockTrywrlock();
void scePthreadRwlockUnlock();
void scePthreadRwlockWrlock();
void scePthreadSelf();
void scePthreadSetaffinity();
void scePthreadSetBesteffort();
void scePthreadSetcancelstate();
void scePthreadSetcanceltype();
void scePthreadSetconcurrency();
void scePthreadSetDefaultstacksize();
void scePthreadSetName();
void scePthreadSetprio();
void scePthreadSetschedparam();
void scePthreadSetspecific();
void scePthreadSingle();
void scePthreadSuspend();
void scePthreadSuspendAll();
void scePthreadTestcancel();
void scePthreadTimedjoin();
void scePthreadYield();
void sched_get_priority_max();
void sched_get_priority_min();
void sched_getparam();
void sched_getscheduler();
void sched_rr_get_interval();
void sched_setparam();
void sched_setscheduler();
void sched_yield();
void select();
void sem_close();
void sem_destroy();
void sem_getvalue();
void sem_init();
void sem_open();
void sem_post();
void sem_setname();
void sem_timedwait();
void sem_trywait();
void sem_unlink();
void sem_wait();
void send();
void sendfile();
void sendmsg();
void sendto();
void set_phys_fmem_limit();
void setcontext();
void setegid();
void seteuid();
void setgroups();
void setitimer();
void setpriority();
void setregid();
void setreuid();
void setrlimit();
void setsockopt();
void settimeofday();
void setuid();
void shm_open();
void shm_unlink();
void shutdown();
void sigaction();
void sigaddset();
void sigaltstack();
void sigdelset();
void sigemptyset();
void sigfillset();
void sigismember();
void siglongjmp();
void signal();
void sigpending();
void sigprocmask();
void sigqueue();
void sigreturn();
void sigsetjmp();
void sigsuspend();
void sigtimedwait();
void sigwait();
void sigwaitinfo();
void sleep();
void socket();
void socketpair();
void stat();
void swapcontext();
void sync();
void sysarch();
void sysconf();
void sysctl();
void sysctlbyname();
void sysctlnametomib();
void sysKernelGetLowerLimitUpdVersion();
void sysKernelGetManufacturingMode();
void sysKernelGetUpdVersion();
void system();
void tcdrain();
void tcflow();
void tcflush();
void tcgetattr();
void tcgetpgrp();
void tcgetsid();
void tcsendbreak();
void tcsetattr();
void tcsetpgrp();
void tcsetsid();
void truncate();
void unlink();
void usleep();
void utimes();
void uuidgen();
void wait();
void wait3();
void waitpid();
void write();
void writev();
