#pragma once

// Params should go here....

// code goes here
// example ABI_SYSV int test(int input);
void accept();
void bind();
void chflags();
void chmod();
void clock_getres();
void clock_gettime();
void close();
void connect();
void creat();
void fchflags();
void fchmod();
void fcntl();
void flock();
void fstat();
void fsync();
void ftruncate();
void futimes();
void getcontext();
void getdents();
void getdirentries();
void getdtablesize();
void getpagesize();
void getpeername();
void getpid();
void getsockname();
void getsockopt();
void gettimeofday();
void htonl();
void htons();
void inet_ntop();
void inet_pton();
void kevent();
void kqueue();
void listen();
void lseek();
void madvise();
void mkdir();
void mlock();
void mlockall();
void mmap();
void mprotect();
void msync();
void munlock();
void munlockall();
void munmap();
void nanosleep();
void ntohl();
void ntohs();
void open();
void pread();
void preadv();
void pthread_attr_destroy();
void pthread_attr_get_np();
void pthread_attr_getdetachstate();
void pthread_attr_getguardsize();
void pthread_attr_getinheritsched();
void pthread_attr_getschedparam();
void pthread_attr_getschedpolicy();
void pthread_attr_getscope();
void pthread_attr_getstack();
void pthread_attr_getstackaddr();
void pthread_attr_getstacksize();
void pthread_attr_init();
void pthread_attr_setdetachstate();
void pthread_attr_setguardsize();
void pthread_attr_setinheritsched();
void pthread_attr_setschedparam();
void pthread_attr_setschedpolicy();
void pthread_attr_setscope();
void pthread_attr_setstack();
void pthread_attr_setstackaddr();
void pthread_attr_setstacksize();
void pthread_barrier_destroy();
void pthread_barrier_init();
void pthread_barrier_wait();
void pthread_barrierattr_destroy();
void pthread_barrierattr_getpshared();
void pthread_barrierattr_init();
void pthread_barrierattr_setpshared();
void pthread_cancel();
void pthread_cleanup_pop();
void pthread_cleanup_push();
void pthread_cond_broadcast();
void pthread_cond_destroy();
void pthread_cond_init();
void pthread_cond_signal();
void pthread_cond_signalto_np();
void pthread_cond_timedwait();
void pthread_cond_wait();
void pthread_condattr_destroy();
void pthread_condattr_getclock();
void pthread_condattr_getpshared();
void pthread_condattr_init();
void pthread_condattr_setclock();
void pthread_condattr_setpshared();
void pthread_create();
void pthread_create_name_np();
void pthread_detach();
void pthread_equal();
void pthread_exit();
void pthread_getconcurrency();
void pthread_getcpuclockid();
void pthread_getname_np();
void pthread_getprio();
void pthread_getschedparam();
void pthread_getspecific();
void pthread_join();
void pthread_key_create();
void pthread_key_delete();
void pthread_mutex_destroy();
void pthread_mutex_getprioceiling();
void pthread_mutex_init();
void pthread_mutex_lock();
void pthread_mutex_setprioceiling();
void pthread_mutex_timedlock();
void pthread_mutex_trylock();
void pthread_mutex_unlock();
void pthread_mutexattr_destroy();
void pthread_mutexattr_getprioceiling();
void pthread_mutexattr_getprotocol();
void pthread_mutexattr_getpshared();
void pthread_mutexattr_gettype();
void pthread_mutexattr_init();
void pthread_mutexattr_setprioceiling();
void pthread_mutexattr_setprotocol();
void pthread_mutexattr_setpshared();
void pthread_mutexattr_settype();
void pthread_once();
void pthread_rename_np();
void pthread_rwlock_destroy();
void pthread_rwlock_init();
void pthread_rwlock_rdlock();
void pthread_rwlock_timedrdlock();
void pthread_rwlock_timedwrlock();
void pthread_rwlock_tryrdlock();
void pthread_rwlock_trywrlock();
void pthread_rwlock_unlock();
void pthread_rwlock_wrlock();
void pthread_rwlockattr_destroy();
void pthread_rwlockattr_getpshared();
void pthread_rwlockattr_gettype_np();
void pthread_rwlockattr_init();
void pthread_rwlockattr_setpshared();
void pthread_rwlockattr_settype_np();
void pthread_self();
void pthread_setcancelstate();
void pthread_setcanceltype();
void pthread_setconcurrency();
void pthread_setprio();
void pthread_setschedparam();
void pthread_setspecific();
void pthread_sigmask();
void pthread_testcancel();
void pthread_yield();
void pwrite();
void pwritev();
void read();
void readv();
void recv();
void recvfrom();
void recvmsg();
void rename();
void rmdir();
void sched_get_priority_max();
void sched_get_priority_min();
void sched_getparam();
void sched_setparam();
void sched_yield();
void select();
void sem_destroy();
void sem_getvalue();
void sem_init();
void sem_post();
void sem_timedwait();
void sem_trywait();
void sem_unlink();
void sem_wait();
void send();
void sendmsg();
void sendto();
void setcontext();
void setsockopt();
void shutdown();
void sleep();
void socket();
void stat();
void swapcontext();
void sync();
void truncate();
void unlink();
void usleep();
void utimes();
void write();
void writev();
