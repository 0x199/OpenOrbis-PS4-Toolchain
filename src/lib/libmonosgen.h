#pragma once

// Params should go here....

// code goes here
// example ABI_SYSV int test(int input);
void coil_load_module_internal();
void coil_registry_get_int();
void coil_registry_get_str();
void mini_get_debug_options();
void mono_add_internal_call();
void mono_aot_get_method();
void mono_aot_register_module();
void mono_array_addr_with_size();
void mono_array_class_get();
void mono_array_clone();
void mono_array_element_size();
void mono_array_length();
void mono_array_new();
void mono_array_new_full();
void mono_array_new_specific();
void mono_assemblies_cleanup();
void mono_assemblies_init();
void mono_assembly_close();
void mono_assembly_fill_assembly_name();
void mono_assembly_foreach();
void mono_assembly_get_assemblyref();
void mono_assembly_get_image();
void mono_assembly_get_main();
void mono_assembly_get_name();
void mono_assembly_get_object();
void mono_assembly_getrootdir();
void mono_assembly_invoke_load_hook();
void mono_assembly_invoke_search_hook();
void mono_assembly_load();
void mono_assembly_load_from();
void mono_assembly_load_from_full();
void mono_assembly_load_full();
void mono_assembly_load_module();
void mono_assembly_load_reference();
void mono_assembly_load_references();
void mono_assembly_load_with_partial_name();
void mono_assembly_loaded();
void mono_assembly_loaded_full();
void mono_assembly_name_free();
void mono_assembly_name_get_culture();
void mono_assembly_name_get_name();
void mono_assembly_name_get_pubkeytoken();
void mono_assembly_name_get_version();
void mono_assembly_name_new();
void mono_assembly_names_equal();
void mono_assembly_open();
void mono_assembly_open_full();
void mono_assembly_set_main();
void mono_assembly_setrootdir();
void mono_bitset_alloc_size();
void mono_bitset_clear();
void mono_bitset_clear_all();
void mono_bitset_clone();
void mono_bitset_copyto();
void mono_bitset_count();
void mono_bitset_equal();
void mono_bitset_find_first();
void mono_bitset_find_first_unset();
void mono_bitset_find_last();
void mono_bitset_find_start();
void mono_bitset_foreach();
void mono_bitset_free();
void mono_bitset_intersection();
void mono_bitset_intersection_2();
void mono_bitset_invert();
void mono_bitset_mem_new();
void mono_bitset_new();
void mono_bitset_set();
void mono_bitset_set_all();
void mono_bitset_size();
void mono_bitset_sub();
void mono_bitset_test();
void mono_bitset_test_bulk();
void mono_bitset_union();
void mono_bounded_array_class_get();
void mono_breakpoint_clean_code();
void mono_build_date();
void mono_check_corlib_version();
void mono_class_array_element_size();
void mono_class_data_size();
void mono_class_describe_statics();
void mono_class_enum_basetype();
void mono_class_from_generic_parameter();
void mono_class_from_mono_type();
void mono_class_from_name();
void mono_class_from_name_case();
void mono_class_from_typeref();
void mono_class_from_typeref_checked();
void mono_class_get();
void mono_class_get_byref_type();
void mono_class_get_element_class();
void mono_class_get_event_token();
void mono_class_get_events();
void mono_class_get_field();
void mono_class_get_field_from_name();
void mono_class_get_field_token();
void mono_class_get_fields();
void mono_class_get_flags();
void mono_class_get_full();
void mono_class_get_image();
void mono_class_get_interfaces();
void mono_class_get_method_from_name();
void mono_class_get_method_from_name_flags();
void mono_class_get_methods();
void mono_class_get_name();
void mono_class_get_namespace();
void mono_class_get_nested_types();
void mono_class_get_nesting_type();
void mono_class_get_parent();
void mono_class_get_properties();
void mono_class_get_property_from_name();
void mono_class_get_property_token();
void mono_class_get_rank();
void mono_class_get_type();
void mono_class_get_type_token();
void mono_class_implements_interface();
void mono_class_inflate_generic_method();
void mono_class_inflate_generic_type();
void mono_class_init();
void mono_class_instance_size();
void mono_class_interface_offset();
void mono_class_is_assignable_from();
void mono_class_is_delegate();
void mono_class_is_enum();
void mono_class_is_subclass_of();
void mono_class_is_valid_enum();
void mono_class_is_valuetype();
void mono_class_min_align();
void mono_class_name_from_token();
void mono_class_num_events();
void mono_class_num_fields();
void mono_class_num_methods();
void mono_class_num_properties();
void mono_class_value_size();
void mono_class_vtable();
void mono_cli_rva_image_map();
void mono_code_manager_cleanup();
void mono_code_manager_commit();
void mono_code_manager_destroy();
void mono_code_manager_init();
void mono_code_manager_invalidate();
void mono_code_manager_new();
void mono_code_manager_new_dynamic();
void mono_code_manager_reserve();
void mono_code_manager_reserve_align();
void mono_code_manager_set_read_only();
void mono_code_manager_size();
void mono_compile_method();
void mono_conc_hashtable_destroy();
void mono_conc_hashtable_foreach();
void mono_conc_hashtable_insert();
void mono_conc_hashtable_lookup();
void mono_conc_hashtable_new();
void mono_conc_hashtable_new_full();
void mono_conc_hashtable_remove();
void mono_config_cleanup();
void mono_config_for_assembly();
void mono_config_is_server_mode();
void mono_config_parse();
void mono_config_parse_memory();
void mono_config_set_server_mode();
void mono_config_string_for_assembly_file();
void mono_context_get();
void mono_context_get_desc();
void mono_context_get_domain_id();
void mono_context_get_id();
void mono_context_init();
void mono_context_set();
void mono_counter_get_name();
void mono_counter_get_section();
void mono_counter_get_size();
void mono_counter_get_type();
void mono_counter_get_unit();
void mono_counter_get_variance();
void mono_counters_cleanup();
void mono_counters_dump();
void mono_counters_enable();
void mono_counters_foreach();
void mono_counters_init();
void mono_counters_on_register();
void mono_counters_register();
void mono_counters_register_with_size();
void mono_counters_sample();
void mono_custom_attrs_construct();
void mono_custom_attrs_free();
void mono_custom_attrs_from_assembly();
void mono_custom_attrs_from_class();
void mono_custom_attrs_from_event();
void mono_custom_attrs_from_field();
void mono_custom_attrs_from_index();
void mono_custom_attrs_from_method();
void mono_custom_attrs_from_param();
void mono_custom_attrs_from_property();
void mono_custom_attrs_get_attr();
void mono_custom_attrs_has_attr();
void mono_debug_add_delegate_trampoline();
void mono_debug_add_method();
void mono_debug_cleanup();
void mono_debug_close_image();
void mono_debug_close_mono_symbol_file();
void mono_debug_domain_create();
void mono_debug_domain_unload();
void mono_debug_enabled();
void mono_debug_find_method();
void mono_debug_free_locals();
void mono_debug_free_method_jit_info();
void mono_debug_free_source_location();
void mono_debug_il_offset_from_address();
void mono_debug_init();
void mono_debug_lookup_locals();
void mono_debug_lookup_method();
void mono_debug_lookup_method_addresses();
void mono_debug_lookup_source_location();
void mono_debug_open_image_from_memory();
void mono_debug_open_mono_symbols();
void mono_debug_print_stack_frame();
void mono_debug_print_vars();
void mono_debug_remove_method();
void mono_debug_symfile_free_location();
void mono_debug_symfile_is_loaded();
void mono_debug_symfile_lookup_locals();
void mono_debug_symfile_lookup_location();
void mono_debug_symfile_lookup_method();
void mono_debugger_agent_parse_options();
void mono_debugger_agent_register_transport();
void mono_debugger_agent_transport_handshake();
void mono_debugger_insert_breakpoint();
void mono_debugger_method_has_breakpoint();
void mono_debugger_run_finally();
void mono_declsec_flags_from_assembly();
void mono_declsec_flags_from_class();
void mono_declsec_flags_from_method();
void mono_declsec_get_assembly_action();
void mono_declsec_get_class_action();
void mono_declsec_get_demands();
void mono_declsec_get_inheritdemands_class();
void mono_declsec_get_inheritdemands_method();
void mono_declsec_get_linkdemands();
void mono_declsec_get_method_action();
void mono_delegate_free_ftnptr();
void mono_delegate_to_ftnptr();
void mono_digest_get_public_token();
void mono_disasm_code();
void mono_disasm_code_one();
void mono_dl_fallback_register();
void mono_dl_fallback_unregister();
void mono_dllmap_insert();
void mono_domain_add_class_static_data();
void mono_domain_assembly_open();
void mono_domain_create();
void mono_domain_create_appdomain();
void mono_domain_finalize();
void mono_domain_foreach();
void mono_domain_free();
void mono_domain_from_appdomain();
void mono_domain_get();
void mono_domain_get_by_id();
void mono_domain_get_friendly_name();
void mono_domain_get_id();
void mono_domain_has_type_resolve();
void mono_domain_is_unloading();
void mono_domain_owns_vtable_slot();
void mono_domain_set();
void mono_domain_set_config();
void mono_domain_set_internal();
void mono_domain_try_type_resolve();
void mono_domain_try_unload();
void mono_domain_unload();
void mono_emit_native_call();
void mono_environment_exitcode_get();
void mono_environment_exitcode_set();
void mono_error_cleanup();
void mono_error_get_error_code();
void mono_error_get_message();
void mono_error_init();
void mono_error_init_flags();
void mono_error_ok();
void mono_escape_uri_string();
void mono_event_get_add_method();
void mono_event_get_flags();
void mono_event_get_name();
void mono_event_get_object();
void mono_event_get_parent();
void mono_event_get_raise_method();
void mono_event_get_remove_method();
void mono_exception_from_name();
void mono_exception_from_name_domain();
void mono_exception_from_name_msg();
void mono_exception_from_name_two_strings();
void mono_exception_from_token();
void mono_exception_from_token_two_strings();
void mono_exception_walk_trace();
void mono_field_from_token();
void mono_field_full_name();
void mono_field_get_data();
void mono_field_get_flags();
void mono_field_get_name();
void mono_field_get_object();
void mono_field_get_offset();
void mono_field_get_parent();
void mono_field_get_type();
void mono_field_get_value();
void mono_field_get_value_object();
void mono_field_set_value();
void mono_field_static_get_value();
void mono_field_static_set_value();
void mono_file_map();
void mono_file_map_close();
void mono_file_map_fd();
void mono_file_map_open();
void mono_file_map_size();
void mono_file_unmap();
void mono_free();
void mono_free_bstr();
void mono_free_method();
void mono_free_verify_list();
void mono_g_hash_table_destroy();
void mono_g_hash_table_find();
void mono_g_hash_table_foreach();
void mono_g_hash_table_foreach_remove();
void mono_g_hash_table_insert();
void mono_g_hash_table_lookup();
void mono_g_hash_table_lookup_extended();
void mono_g_hash_table_new_type();
void mono_g_hash_table_print_stats();
void mono_g_hash_table_remove();
void mono_g_hash_table_replace();
void mono_g_hash_table_size();
void mono_gc_collect();
void mono_gc_collection_count();
void mono_gc_get_generation();
void mono_gc_get_heap_size();
void mono_gc_get_used_size();
void mono_gc_invoke_finalizers();
void mono_gc_max_generation();
void mono_gc_out_of_memory();
void mono_gc_reference_queue_add();
void mono_gc_reference_queue_free();
void mono_gc_reference_queue_new();
void mono_gc_register_bridge_callbacks();
void mono_gc_register_finalizer_callbacks();
void mono_gc_register_root();
void mono_gc_set_heap_size_limit();
void mono_gc_toggleref_add();
void mono_gc_toggleref_register_callback();
void mono_gc_wait_for_bridge_processing();
void mono_gc_walk_heap();
void mono_gc_wbarrier_arrayref_copy();
void mono_gc_wbarrier_generic_nostore();
void mono_gc_wbarrier_generic_store();
void mono_gc_wbarrier_generic_store_atomic();
void mono_gc_wbarrier_object_copy();
void mono_gc_wbarrier_set_arrayref();
void mono_gc_wbarrier_set_field();
void mono_gc_wbarrier_value_copy();
void mono_gchandle_free();
void mono_gchandle_get_target();
void mono_gchandle_new();
void mono_gchandle_new_weakref();
void mono_get_array_class();
void mono_get_boolean_class();
void mono_get_byte_class();
void mono_get_char_class();
void mono_get_config_dir();
void mono_get_corlib();
void mono_get_dbnull_object();
void mono_get_delegate_begin_invoke();
void mono_get_delegate_end_invoke();
void mono_get_delegate_invoke();
void mono_get_double_class();
void mono_get_enum_class();
void mono_get_exception_appdomain_unloaded();
void mono_get_exception_argument();
void mono_get_exception_argument_null();
void mono_get_exception_argument_out_of_range();
void mono_get_exception_arithmetic();
void mono_get_exception_array_type_mismatch();
void mono_get_exception_bad_image_format();
void mono_get_exception_bad_image_format2();
void mono_get_exception_cannot_unload_appdomain();
void mono_get_exception_class();
void mono_get_exception_divide_by_zero();
void mono_get_exception_execution_engine();
void mono_get_exception_field_access();
void mono_get_exception_file_not_found();
void mono_get_exception_file_not_found2();
void mono_get_exception_index_out_of_range();
void mono_get_exception_invalid_cast();
void mono_get_exception_invalid_operation();
void mono_get_exception_io();
void mono_get_exception_method_access();
void mono_get_exception_missing_field();
void mono_get_exception_missing_method();
void mono_get_exception_not_implemented();
void mono_get_exception_not_supported();
void mono_get_exception_null_reference();
void mono_get_exception_out_of_memory();
void mono_get_exception_overflow();
void mono_get_exception_reflection_type_load();
void mono_get_exception_runtime_wrapped();
void mono_get_exception_security();
void mono_get_exception_serialization();
void mono_get_exception_stack_overflow();
void mono_get_exception_synchronization_lock();
void mono_get_exception_thread_abort();
void mono_get_exception_thread_interrupted();
void mono_get_exception_thread_state();
void mono_get_exception_type_initialization();
void mono_get_exception_type_load();
void mono_get_inflated_method();
void mono_get_int16_class();
void mono_get_int32_class();
void mono_get_int64_class();
void mono_get_intptr_class();
void mono_get_jit_info_from_method();
void mono_get_machine_config();
void mono_get_method();
void mono_get_method_constrained();
void mono_get_method_full();
void mono_get_object_class();
void mono_get_root_domain();
void mono_get_runtime_build_info();
void mono_get_sbyte_class();
void mono_get_single_class();
void mono_get_string_class();
void mono_get_thread_class();
void mono_get_uint16_class();
void mono_get_uint32_class();
void mono_get_uint64_class();
void mono_get_uintptr_class();
void mono_get_void_class();
void mono_guid_to_string();
void mono_image_add_to_name_cache();
void mono_image_addref();
void mono_image_close();
void mono_image_ensure_section();
void mono_image_ensure_section_idx();
void mono_image_fixup_vtable();
void mono_image_get_assembly();
void mono_image_get_entry_point();
void mono_image_get_filename();
void mono_image_get_guid();
void mono_image_get_name();
void mono_image_get_public_key();
void mono_image_get_resource();
void mono_image_get_strong_name();
void mono_image_get_table_info();
void mono_image_get_table_rows();
void mono_image_has_authenticode_entry();
void mono_image_init();
void mono_image_init_name_cache();
void mono_image_is_dynamic();
void mono_image_load_file_for_image();
void mono_image_load_module();
void mono_image_loaded();
void mono_image_loaded_by_guid();
void mono_image_loaded_by_guid_full();
void mono_image_loaded_full();
void mono_image_lookup_resource();
void mono_image_open();
void mono_image_open_from_data();
void mono_image_open_from_data_full();
void mono_image_open_from_data_with_name();
void mono_image_open_full();
void mono_image_rva_map();
void mono_image_strerror();
void mono_image_strong_name_position();
void mono_images_cleanup();
void mono_images_init();
void mono_init();
void mono_init_from_assembly();
void mono_init_version();
void mono_inst_name();
void mono_install_assembly_load_hook();
void mono_install_assembly_postload_refonly_search_hook();
void mono_install_assembly_postload_search_hook();
void mono_install_assembly_preload_hook();
void mono_install_assembly_refonly_preload_hook();
void mono_install_assembly_refonly_search_hook();
void mono_install_assembly_search_hook();
void mono_install_load_aot_data_hook();
void mono_install_runtime_cleanup();
void mono_install_unhandled_exception_hook();
void mono_is_debugger_attached();
void mono_jit_cleanup();
void mono_jit_exec();
void mono_jit_info_get_code_size();
void mono_jit_info_get_code_start();
void mono_jit_info_get_method();
void mono_jit_info_table_find();
void mono_jit_init();
void mono_jit_init_version();
void mono_jit_parse_options();
void mono_jit_set_aot_mode();
void mono_jit_set_aot_only();
void mono_jit_set_trace_options();
void mono_jit_thread_attach();
void mono_jit_thread_detach();
void mono_ldstr();
void mono_ldtoken();
void mono_load_remote_field();
void mono_load_remote_field_new();
void mono_lock_free_queue_dequeue();
void mono_lock_free_queue_enqueue();
void mono_lock_free_queue_init();
void mono_lock_free_queue_node_init();
void mono_lock_free_queue_node_unpoison();
void mono_locks_dump();
void mono_lookup_icall_symbol();
void mono_lookup_internal_call();
void mono_lookup_pinvoke_call();
void mono_main();
void mono_marshal_string_to_utf16();
void mono_md5_final();
void mono_md5_get_digest();
void mono_md5_get_digest_from_file();
void mono_md5_init();
void mono_md5_update();
void mono_mempool_alloc();
void mono_mempool_alloc0();
void mono_mempool_contains_addr();
void mono_mempool_destroy();
void mono_mempool_get_allocated();
void mono_mempool_invalidate();
void mono_mempool_new();
void mono_mempool_new_size();
void mono_mempool_stats();
void mono_mempool_strdup();
void mono_metadata_blob_heap();
void mono_metadata_cleanup();
void mono_metadata_compute_size();
void mono_metadata_custom_attrs_from_index();
void mono_metadata_declsec_from_index();
void mono_metadata_decode_blob_size();
void mono_metadata_decode_row();
void mono_metadata_decode_row_col();
void mono_metadata_decode_signed_value();
void mono_metadata_decode_table_row();
void mono_metadata_decode_table_row_col();
void mono_metadata_decode_value();
void mono_metadata_encode_value();
void mono_metadata_events_from_typedef();
void mono_metadata_field_info();
void mono_metadata_field_info_with_mempool();
void mono_metadata_free_array();
void mono_metadata_free_inflated_signature();
void mono_metadata_free_marshal_spec();
void mono_metadata_free_method_signature();
void mono_metadata_free_mh();
void mono_metadata_free_type();
void mono_metadata_generic_class_is_valuetype();
void mono_metadata_get_constant_index();
void mono_metadata_get_generic_param_row();
void mono_metadata_get_inflated_signature();
void mono_metadata_get_marshal_info();
void mono_metadata_guid_heap();
void mono_metadata_implmap_from_method();
void mono_metadata_init();
void mono_metadata_interfaces_from_typedef();
void mono_metadata_load_generic_param_constraints_checked();
void mono_metadata_load_generic_params();
void mono_metadata_locate();
void mono_metadata_locate_token();
void mono_metadata_methods_from_event();
void mono_metadata_methods_from_property();
void mono_metadata_nested_in_typedef();
void mono_metadata_nesting_typedef();
void mono_metadata_packing_from_typedef();
void mono_metadata_parse_array();
void mono_metadata_parse_custom_mod();
void mono_metadata_parse_field_type();
void mono_metadata_parse_marshal_spec();
void mono_metadata_parse_method_signature();
void mono_metadata_parse_method_signature_full();
void mono_metadata_parse_mh();
void mono_metadata_parse_mh_full();
void mono_metadata_parse_param();
void mono_metadata_parse_signature();
void mono_metadata_parse_type();
void mono_metadata_parse_typedef_or_ref();
void mono_metadata_properties_from_typedef();
void mono_metadata_signature_alloc();
void mono_metadata_signature_dup();
void mono_metadata_signature_equal();
void mono_metadata_string_heap();
void mono_metadata_token_from_dor();
void mono_metadata_translate_token_index();
void mono_metadata_type_equal();
void mono_metadata_type_hash();
void mono_metadata_typedef_from_field();
void mono_metadata_typedef_from_method();
void mono_metadata_user_string();
void mono_method_body_get_object();
void mono_method_can_access_field();
void mono_method_can_access_method();
void mono_method_desc_free();
void mono_method_desc_from_method();
void mono_method_desc_full_match();
void mono_method_desc_match();
void mono_method_desc_new();
void mono_method_desc_search_in_class();
void mono_method_desc_search_in_image();
void mono_method_full_name();
void mono_method_get_class();
void mono_method_get_flags();
void mono_method_get_generic_container();
void mono_method_get_header();
void mono_method_get_header_checked();
void mono_method_get_index();
void mono_method_get_last_managed();
void mono_method_get_marshal_info();
void mono_method_get_name();
void mono_method_get_object();
void mono_method_get_param_names();
void mono_method_get_param_token();
void mono_method_get_signature();
void mono_method_get_signature_full();
void mono_method_get_token();
void mono_method_get_unmanaged_thunk();
void mono_method_has_marshal_info();
void mono_method_header_get_clauses();
void mono_method_header_get_code();
void mono_method_header_get_locals();
void mono_method_header_get_num_clauses();
void mono_method_print_code();
void mono_method_signature();
void mono_method_verify();
void mono_mlist_alloc();
void mono_mlist_append();
void mono_mlist_get_data();
void mono_mlist_last();
void mono_mlist_length();
void mono_mlist_next();
void mono_mlist_prepend();
void mono_mlist_remove_item();
void mono_mlist_set_data();
void mono_mlist_set_next();
void mono_module_file_get_object();
void mono_module_get_object();
void mono_monitor_enter();
void mono_monitor_enter_v4();
void mono_monitor_exit();
void mono_monitor_try_enter();
void mono_mprotect();
void mono_object_castclass_mbyref();
void mono_object_clone();
void mono_object_describe();
void mono_object_describe_fields();
void mono_object_get_class();
void mono_object_get_domain();
void mono_object_get_size();
void mono_object_get_virtual_method();
void mono_object_hash();
void mono_object_isinst();
void mono_object_isinst_mbyref();
void mono_object_new();
void mono_object_new_alloc_specific();
void mono_object_new_fast();
void mono_object_new_from_token();
void mono_object_new_specific();
void mono_object_to_string();
void mono_object_unbox();
void mono_opcode_name();
void mono_opcode_value();
void mono_pagesize();
void mono_param_get_objects();
void mono_parse_default_optimizations();
void mono_parse_env_options();
void mono_parse_options_from();
void mono_path_canonicalize();
void mono_path_resolve_symlinks();
void mono_pe_file_open();
void mono_perfcounter_foreach();
void mono_perfcounters_init();
void mono_personality();
void mono_pmip();
void mono_poll();
void mono_print_method_from_ip();
void mono_print_thread_dump();
void mono_print_thread_dump_from_ctx();
void mono_print_unhandled_exception();
void mono_profiler_coverage_get();
void mono_profiler_get_events();
void mono_profiler_install();
void mono_profiler_install_allocation();
void mono_profiler_install_appdomain();
void mono_profiler_install_appdomain_name();
void mono_profiler_install_assembly();
void mono_profiler_install_class();
void mono_profiler_install_code_buffer_new();
void mono_profiler_install_code_chunk_destroy();
void mono_profiler_install_code_chunk_new();
void mono_profiler_install_context();
void mono_profiler_install_coverage_filter();
void mono_profiler_install_enter_leave();
void mono_profiler_install_exception();
void mono_profiler_install_gc();
void mono_profiler_install_gc_moves();
void mono_profiler_install_gc_roots();
void mono_profiler_install_iomap();
void mono_profiler_install_jit_compile();
void mono_profiler_install_jit_end();
void mono_profiler_install_method_free();
void mono_profiler_install_method_invoke();
void mono_profiler_install_module();
void mono_profiler_install_monitor();
void mono_profiler_install_runtime_initialized();
void mono_profiler_install_statistical();
void mono_profiler_install_statistical_call_chain();
void mono_profiler_install_thread();
void mono_profiler_install_thread_name();
void mono_profiler_install_transition();
void mono_profiler_load();
void mono_profiler_set_events();
void mono_profiler_set_statistical_mode();
void mono_property_get_flags();
void mono_property_get_get_method();
void mono_property_get_name();
void mono_property_get_object();
void mono_property_get_parent();
void mono_property_get_set_method();
void mono_property_get_value();
void mono_property_hash_destroy();
void mono_property_hash_insert();
void mono_property_hash_lookup();
void mono_property_hash_new();
void mono_property_hash_remove_object();
void mono_property_set_value();
void mono_ptr_class_get();
void mono_raise_exception();
void mono_reflection_assembly_get_assembly();
void mono_reflection_free_type_info();
void mono_reflection_get_custom_attrs();
void mono_reflection_get_custom_attrs_blob();
void mono_reflection_get_custom_attrs_by_type();
void mono_reflection_get_custom_attrs_data();
void mono_reflection_get_custom_attrs_info();
void mono_reflection_get_token();
void mono_reflection_get_type();
void mono_reflection_parse_type();
void mono_reflection_type_from_name();
void mono_reflection_type_get_type();
void mono_register_bundled_assemblies();
void mono_register_config_for_assembly();
void mono_register_machine_config();
void mono_register_symfile_for_assembly();
void mono_replace_ins();
void mono_runtime_class_init();
void mono_runtime_cleanup();
void mono_runtime_delegate_invoke();
void mono_runtime_exec_main();
void mono_runtime_exec_managed_code();
void mono_runtime_get_main_args();
void mono_runtime_init();
void mono_runtime_invoke();
void mono_runtime_invoke_array();
void mono_runtime_is_shutting_down();
void mono_runtime_object_init();
void mono_runtime_quit();
void mono_runtime_resource_check_limit();
void mono_runtime_resource_limit();
void mono_runtime_resource_set_callback();
void mono_runtime_run_main();
void mono_runtime_set_main_args();
void mono_runtime_set_shutting_down();
void mono_security_core_clr_get_options();
void mono_security_core_clr_require_elevated_permissions();
void mono_security_core_clr_set_options();
void mono_security_enable_core_clr();
void mono_security_set_core_clr_platform_callback();
void mono_set_assemblies_path();
void mono_set_break_policy();
void mono_set_config_dir();
void mono_set_crash_chaining();
void mono_set_defaults();
void mono_set_dirs();
void mono_set_is_debugger_attached();
void mono_set_rootdir();
void mono_set_signal_chaining();
void mono_sgen_set_thread_type();
void mono_sha1_final();
void mono_sha1_get_digest();
void mono_sha1_get_digest_from_file();
void mono_sha1_init();
void mono_sha1_update();
void mono_shared_area();
void mono_shared_area_for_pid();
void mono_shared_area_instances();
void mono_shared_area_remove();
void mono_shared_area_unload();
void mono_signature_explicit_this();
void mono_signature_get_call_conv();
void mono_signature_get_desc();
void mono_signature_get_param_count();
void mono_signature_get_params();
void mono_signature_get_return_type();
void mono_signature_hash();
void mono_signature_is_instance();
void mono_signature_param_is_out();
void mono_signature_vararg_start();
void mono_signbit_double();
void mono_signbit_float();
void mono_stack_walk();
void mono_stack_walk_async_safe();
void mono_stack_walk_no_il();
void mono_store_remote_field();
void mono_store_remote_field_new();
void mono_string_chars();
void mono_string_equal();
void mono_string_from_bstr();
void mono_string_from_utf16();
void mono_string_from_utf32();
void mono_string_hash();
void mono_string_intern();
void mono_string_is_interned();
void mono_string_length();
void mono_string_new();
void mono_string_new_len();
void mono_string_new_size();
void mono_string_new_utf16();
void mono_string_new_utf32();
void mono_string_new_wrapper();
void mono_string_to_utf16();
void mono_string_to_utf32();
void mono_string_to_utf8();
void mono_string_to_utf8_checked();
void mono_stringify_assembly_name();
void mono_table_info_get_rows();
void mono_thread_attach();
void mono_thread_cleanup();
void mono_thread_create();
void mono_thread_current();
void mono_thread_detach();
void mono_thread_detach_if_exiting();
void mono_thread_exit();
void mono_thread_get_main();
void mono_thread_get_managed_id();
void mono_thread_get_max_threads();
void mono_thread_get_name_utf8();
void mono_thread_get_num_threads();
void mono_thread_get_undeniable_exception();
void mono_thread_init();
void mono_thread_is_foreign();
void mono_thread_manage();
void mono_thread_new_init();
void mono_thread_set_main();
void mono_thread_set_manage_callback();
void mono_thread_set_max_threads();
void mono_thread_set_threads_exhausted_callback();
void mono_thread_stop();
void mono_thread_suspend_all_other_threads();
void mono_threadpool_set_max_threads();
void mono_threads_assert_gc_safe_region();
void mono_threads_assert_gc_unsafe_region();
void mono_threads_attach_tools_thread();
void mono_threads_enter_gc_safe_region();
void mono_threads_enter_gc_unsafe_region();
void mono_threads_exit_gc_safe_region();
void mono_threads_exit_gc_unsafe_region();
void mono_threads_get_default_stacksize();
void mono_threads_request_thread_dump();
void mono_threads_set_default_stacksize();
void mono_threads_set_shutting_down();
void mono_trace_set_level_string();
void mono_trace_set_log_handler();
void mono_trace_set_mask_string();
void mono_trace_set_print_handler();
void mono_trace_set_printerr_handler();
void mono_type_create_from_typespec();
void mono_type_full_name();
void mono_type_generic_inst_is_valuetype();
void mono_type_get_array_type();
void mono_type_get_class();
void mono_type_get_desc();
void mono_type_get_modifiers();
void mono_type_get_name();
void mono_type_get_object();
void mono_type_get_ptr_type();
void mono_type_get_signature();
void mono_type_get_type();
void mono_type_get_underlying_type();
void mono_type_is_byref();
void mono_type_is_pointer();
void mono_type_is_reference();
void mono_type_is_struct();
void mono_type_is_valid_enum_basetype();
void mono_type_is_void();
void mono_type_size();
void mono_type_stack_size();
void mono_type_to_unmanaged();
void mono_unhandled_exception();
void mono_unhandled_exception_message();
void mono_unicode_from_external();
void mono_unicode_to_external();
void mono_upgrade_remote_class_wrapper();
void mono_utf8_from_external();
void mono_utf8_validate_and_len();
void mono_utf8_validate_and_len_with_bounds();
void mono_valloc();
void mono_valloc_aligned();
void mono_value_box();
void mono_value_copy();
void mono_value_copy_array();
void mono_value_describe_fields();
void mono_verify_corlib();
void mono_vfree();
void mono_vtable_get_static_field_data();
void pss_io_icall_install_functions();
