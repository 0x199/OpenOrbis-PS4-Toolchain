#pragma once

// Params should go here....

// code goes here
// example ABI_SYSV int test(int input);
void AES_cfb128_encrypt();
void AES_ecb_encrypt();
void AES_set_encrypt_key();
void ASN1_INTEGER_get();
void ASN1_STRING_data();
void ASN1_STRING_length();
void ASN1_STRING_print();
void ASN1_STRING_to_UTF8();
void ASN1_STRING_type();
void ASN1_TIME_print();
void BIO_ctrl();
void BIO_f_ssl();
void BIO_free();
void BIO_new();
void BIO_new_fp();
void BIO_new_mem_buf();
void BIO_printf();
void BIO_puts();
void BIO_s_mem();
void BN_add_word();
void BN_bin2bn();
void BN_bn2bin();
void BN_CTX_end();
void BN_CTX_free();
void BN_CTX_new();
void BN_CTX_start();
void BN_free();
void BN_mod_inverse();
void BN_mul();
void BN_new();
void BN_num_bits();
void BN_print();
void BN_sub_word();
void CONF_modules_free();
void CONF_modules_load_file();
void CRYPTO_cleanup_all_ex_data();
void CRYPTO_free();
void CRYPTO_malloc();
void CRYPTO_num_locks();
void CRYPTO_set_add_lock_callback();
void CRYPTO_set_locking_callback();
void CRYPTO_set_mem_functions();
void CRYPTO_THREADID_set_callback();
void CRYPTO_THREADID_set_numeric();
void d2i_OCSP_RESPONSE();
void d2i_PKCS12_fp();
void DES_ecb_encrypt();
void DES_set_key();
void DES_set_odd_parity();
void DTLSv1_client_method();
void DTLSv1_server_method();
void EC_KEY_free();
void EC_KEY_generate_key();
void EC_KEY_get0_group();
void EC_KEY_get0_private_key();
void EC_KEY_get0_public_key();
void EC_KEY_new_by_curve_name();
void EC_KEY_set_private_key();
void EC_KEY_set_public_key();
void EC_POINT_free();
void EC_POINT_new();
void EC_POINT_oct2point();
void EC_POINT_point2oct();
void ECDH_compute_key();
void ENGINE_by_id();
void ENGINE_cleanup();
void ENGINE_ctrl();
void ENGINE_ctrl_cmd();
void ENGINE_finish();
void ENGINE_free();
void ENGINE_get_first();
void ENGINE_get_id();
void ENGINE_get_next();
void ENGINE_init();
void ENGINE_load_builtin_engines();
void ENGINE_load_private_key();
void ENGINE_set_default();
void ERR_clear_error();
void ERR_error_string();
void ERR_error_string_n();
void ERR_free_strings();
void ERR_get_error();
void ERR_peek_error();
void ERR_remove_thread_state();
void EVP_aes_128_gcm();
void EVP_CIPHER_CTX_ctrl();
void EVP_CIPHER_CTX_free();
void EVP_CIPHER_CTX_new();
void EVP_cleanup();
void EVP_Digest();
void EVP_EncryptFinal_ex();
void EVP_EncryptInit_ex();
void EVP_EncryptUpdate();
void EVP_PKEY_copy_parameters();
void EVP_PKEY_free();
void EVP_sha256();
void GENERAL_NAMES_free();
void HMAC();
void i2a_ASN1_OBJECT();
void i2d_X509_PUBKEY();
void i2t_ASN1_OBJECT();
void MD4_Final();
void MD4_Init();
void MD4_Update();
void MD5_Final();
void MD5_Init();
void MD5_Update();
void OBJ_cleanup();
void OBJ_create();
void OCSP_basic_add1_cert();
void OCSP_basic_verify();
void OCSP_BASICRESP_free();
void OCSP_cert_status_str();
void OCSP_check_validity();
void OCSP_crl_reason_str();
void OCSP_resp_count();
void OCSP_resp_get0();
void OCSP_RESPONSE_free();
void OCSP_response_get1_basic();
void OCSP_response_status();
void OCSP_response_status_str();
void OCSP_single_get0_status();
void OPENSSL_add_all_algorithms_noconf();
void OPENSSL_load_builtin_modules();
void PEM_read_bio_X509_AUX();
void PEM_read_X509();
void PEM_write_bio_X509();
void PEM_X509_INFO_read_bio();
void PKCS12_free();
void PKCS12_parse();
void PKCS12_PBE_add();
void RAND_add();
void RAND_bytes();
void RAND_file_name();
void RAND_load_file();
void RAND_status();
void RSA_free();
void RSA_new();
void RSA_private_decrypt();
void RSA_public_encrypt();
void RSA_sign();
void RSA_size();
void RSA_verify();
void sceLibreSslGetMemoryPoolStats();
void sceLibreSslInit();
void sceLibreSslTerm();
void SHA256_Final();
void SHA256_Init();
void SHA256_Update();
void sk_num();
void sk_pop();
void sk_pop_free();
void sk_value();
void SSL_CIPHER_get_name();
void SSL_connect();
void SSL_ctrl();
void SSL_CTX_add_client_CA();
void SSL_CTX_callback_ctrl();
void SSL_CTX_check_private_key();
void SSL_CTX_ctrl();
void SSL_CTX_free();
void SSL_CTX_get_cert_store();
void SSL_CTX_get_ex_data();
void SSL_CTX_load_verify_locations();
void SSL_CTX_new();
void SSL_CTX_set_alpn_protos();
void SSL_CTX_set_cert_verify_callback();
void SSL_CTX_set_cipher_list();
void SSL_CTX_set_default_passwd_cb();
void SSL_CTX_set_default_passwd_cb_userdata();
void SSL_CTX_set_ex_data();
void SSL_CTX_set_info_callback();
void SSL_CTX_set_msg_callback();
void SSL_CTX_set_next_proto_select_cb();
void SSL_CTX_set_quiet_shutdown();
void SSL_CTX_set_verify();
void SSL_CTX_set1_groups_list();
void SSL_CTX_use_certificate();
void SSL_CTX_use_certificate_chain_file();
void SSL_CTX_use_certificate_file();
void SSL_CTX_use_PrivateKey();
void SSL_CTX_use_PrivateKey_file();
void SSL_free();
void SSL_get_certificate();
void SSL_get_current_cipher();
void SSL_get_error();
void SSL_get_peer_cert_chain();
void SSL_get_peer_certificate();
void SSL_get_privatekey();
void SSL_get_session();
void SSL_get_shutdown();
void SSL_get_SSL_CTX();
void SSL_get_verify_result();
void SSL_get0_alpn_selected();
void SSL_get1_session();
void SSL_library_init();
void SSL_load_error_strings();
void SSL_new();
void SSL_peek();
void SSL_pending();
void SSL_read();
void SSL_SESSION_free();
void SSL_set_bio();
void SSL_set_connect_state();
void SSL_set_fd();
void SSL_set_session();
void SSL_shutdown();
void SSL_version();
void SSL_write();
void SSLeay();
void SSLv23_client_method();
void UI_create_method();
void UI_destroy_method();
void UI_get_input_flags();
void UI_get_string_type();
void UI_get0_user_data();
void UI_method_get_closer();
void UI_method_get_opener();
void UI_method_get_reader();
void UI_method_get_writer();
void UI_method_set_closer();
void UI_method_set_opener();
void UI_method_set_reader();
void UI_method_set_writer();
void UI_OpenSSL();
void UI_set_result();
void X509_check_issued();
void X509_EXTENSION_get_critical();
void X509_EXTENSION_get_data();
void X509_EXTENSION_get_object();
void X509_free();
void X509_get_ext_d2i();
void X509_get_issuer_name();
void X509_get_pubkey();
void X509_get_serialNumber();
void X509_get_subject_name();
void X509_INFO_free();
void X509_load_crl_file();
void X509_LOOKUP_file();
void X509_NAME_ENTRY_get_data();
void X509_NAME_get_entry();
void X509_NAME_get_index_by_NID();
void X509_NAME_get_text_by_NID();
void X509_NAME_print_ex();
void X509_print_ex();
void X509_STORE_add_cert();
void X509_STORE_add_crl();
void X509_STORE_add_lookup();
void X509_STORE_CTX_get_chain();
void X509_STORE_CTX_get_current_cert();
void X509_STORE_CTX_get_error();
void X509_STORE_set_flags();
void X509_verify_cert();
void X509_verify_cert_error_string();
void X509V3_EXT_print();
