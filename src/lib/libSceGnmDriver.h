#pragma once

// Params should go here....

// code goes here
// example ABI_SYSV int test(int input);
void sceGnmAddEqEvent();
void sceGnmAreSubmitsAllowed();
void sceGnmBeginWorkload();
void sceGnmComputeWaitOnAddress();
void sceGnmComputeWaitSemaphore();
void sceGnmCreateWorkloadStream();
void sceGnmDebuggerGetAddressWatch();
void sceGnmDebuggerReadSqIndirectRegister();
void sceGnmDebuggerSetAddressWatch();
void sceGnmDebugHardwareStatus();
void sceGnmDeleteEqEvent();
void sceGnmDestroyWorkloadStream();
void sceGnmDingDong();
void sceGnmDingDongForWorkload();
void sceGnmDisableMipStatsReport();
void sceGnmDispatchDirect();
void sceGnmDispatchIndirect();
void sceGnmDispatchIndirectOnMec();
void sceGnmDispatchInitDefaultHardwareState();
void sceGnmDrawIndex();
void sceGnmDrawIndexAuto();
void sceGnmDrawIndexIndirect();
void sceGnmDrawIndexIndirectCountMulti();
void sceGnmDrawIndexIndirectMulti();
void sceGnmDrawIndexMultiInstanced();
void sceGnmDrawIndexOffset();
void sceGnmDrawIndirect();
void sceGnmDrawIndirectCountMulti();
void sceGnmDrawIndirectMulti();
void sceGnmDrawInitDefaultHardwareState();
void sceGnmDrawInitDefaultHardwareState175();
void sceGnmDrawInitDefaultHardwareState200();
void sceGnmDrawInitDefaultHardwareState350();
void sceGnmDrawInitToDefaultContextState();
void sceGnmDrawInitToDefaultContextState400();
void sceGnmDrawOpaqueAuto();
void sceGnmDriverCaptureInProgress();
void sceGnmDriverInternalRetrieveGnmInterface();
void sceGnmDriverInternalRetrieveGnmInterfaceForGpuDebugger();
void sceGnmDriverInternalRetrieveGnmInterfaceForGpuException();
void sceGnmDriverInternalRetrieveGnmInterfaceForReplay();
void sceGnmDriverInternalRetrieveGnmInterfaceForResourceRegistration();
void sceGnmDriverInternalRetrieveGnmInterfaceForValidation();
void sceGnmDriverInternalVirtualQuery();
void sceGnmDriverTraceInProgress();
void sceGnmDriverTriggerCapture();
void sceGnmEndWorkload();
void sceGnmFindResourcesPublic();
void sceGnmFlushGarlic();
void sceGnmGetCoredumpAddress();
void sceGnmGetCoredumpMode();
void sceGnmGetCoredumpProtectionFaultTimestamp();
void sceGnmGetDbgGcHandle();
void sceGnmGetDebugTimestamp();
void sceGnmGetEqEventType();
void sceGnmGetEqTimeStamp();
void sceGnmGetGpuBlockStatus();
void sceGnmGetGpuInfoStatus();
void sceGnmGetLastWaitedAddress();
void sceGnmGetNumTcaUnits();
void sceGnmGetOffChipTessellationBufferSize();
void sceGnmGetOwnerName();
void sceGnmGetPhysicalCounterFromVirtualized();
void sceGnmGetProtectionFaultTimeStamp();
void sceGnmGetResourceBaseAddressAndSizeInBytes();
void sceGnmGetResourceName();
void sceGnmGetResourceShaderGuid();
void sceGnmGetResourceType();
void sceGnmGetResourceUserData();
void sceGnmGetShaderProgramBaseAddress();
void sceGnmGetShaderStatus();
void sceGnmGetTheTessellationFactorRingBufferBaseAddress();
void sceGnmGpuPaDebugEnter();
void sceGnmGpuPaDebugLeave();
void sceGnmInsertDingDongMarker();
void sceGnmInsertPopMarker();
void sceGnmInsertPushColorMarker();
void sceGnmInsertPushMarker();
void sceGnmInsertSetColorMarker();
void sceGnmInsertSetMarker();
void sceGnmInsertThreadTraceMarker();
void sceGnmInsertWaitFlipDone();
void sceGnmIsCoredumpValid();
void sceGnmIsUserPaEnabled();
void sceGnmLogicalCuIndexToPhysicalCuIndex();
void sceGnmLogicalCuMaskToPhysicalCuMask();
void sceGnmLogicalTcaUnitToPhysical();
void sceGnmMapComputeQueue();
void sceGnmMapComputeQueueWithPriority();
void sceGnmPaDisableFlipCallbacks();
void sceGnmPaEnableFlipCallbacks();
void sceGnmPaHeartbeat();
void sceGnmQueryResourceRegistrationUserMemoryRequirements();
void sceGnmRaiseUserExceptionEvent();
void sceGnmRegisterGdsResource();
void sceGnmRegisterGnmLiveCallbackConfig();
void sceGnmRegisterOwner();
void sceGnmRegisterResource();
void sceGnmRequestFlipAndSubmitDone();
void sceGnmRequestFlipAndSubmitDoneForWorkload();
void sceGnmRequestMipStatsReportAndReset();
void sceGnmResetVgtControl();
void sceGnmSdmaClose();
void sceGnmSdmaConstFill();
void sceGnmSdmaCopyLinear();
void sceGnmSdmaCopyTiled();
void sceGnmSdmaCopyWindow();
void sceGnmSdmaFlush();
void sceGnmSdmaOpen();
void sceGnmSetCsShader();
void sceGnmSetCsShaderWithModifier();
void sceGnmSetEmbeddedPsShader();
void sceGnmSetEmbeddedVsShader();
void sceGnmSetEsShader();
void sceGnmSetGsRingSizes();
void sceGnmSetGsShader();
void sceGnmSetHsShader();
void sceGnmSetLsShader();
void sceGnmSetPsShader();
void sceGnmSetPsShader350();
void sceGnmSetResourceRegistrationUserMemory();
void sceGnmSetResourceUserData();
void sceGnmSetSpiEnableSqCounters();
void sceGnmSetSpiEnableSqCountersForUnitInstance();
void sceGnmSetupMipStatsReport();
void sceGnmSetVgtControl();
void sceGnmSetVsShader();
void sceGnmSetWaveLimitMultiplier();
void sceGnmSetWaveLimitMultipliers();
void sceGnmSpmEndSpm();
void sceGnmSpmInit();
void sceGnmSpmInit2();
void sceGnmSpmSetDelay();
void sceGnmSpmSetMuxRam();
void sceGnmSpmSetMuxRam2();
void sceGnmSpmSetSelectCounter();
void sceGnmSpmSetSpmSelects();
void sceGnmSpmSetSpmSelects2();
void sceGnmSpmStartSpm();
void sceGnmSqttFini();
void sceGnmSqttFinishTrace();
void sceGnmSqttGetBcInfo();
void sceGnmSqttGetGpuClocks();
void sceGnmSqttGetHiWater();
void sceGnmSqttGetStatus();
void sceGnmSqttGetTraceCounter();
void sceGnmSqttGetTraceWptr();
void sceGnmSqttGetWrapCounts();
void sceGnmSqttGetWrapCounts2();
void sceGnmSqttGetWritebackLabels();
void sceGnmSqttInit();
void sceGnmSqttSelectMode();
void sceGnmSqttSelectTarget();
void sceGnmSqttSelectTokens();
void sceGnmSqttSetCuPerfMask();
void sceGnmSqttSetDceEventWrite();
void sceGnmSqttSetHiWater();
void sceGnmSqttSetTraceBuffer2();
void sceGnmSqttSetTraceBuffers();
void sceGnmSqttSetUserData();
void sceGnmSqttSetUserdataTimer();
void sceGnmSqttStartTrace();
void sceGnmSqttStopTrace();
void sceGnmSqttSwitchTraceBuffer();
void sceGnmSqttSwitchTraceBuffer2();
void sceGnmSqttWaitForEvent();
void sceGnmSubmitAndFlipCommandBuffers();
void sceGnmSubmitAndFlipCommandBuffersForWorkload();
void sceGnmSubmitCommandBuffers();
void sceGnmSubmitCommandBuffersForWorkload();
void sceGnmSubmitDone();
void sceGnmUnmapComputeQueue();
void sceGnmUnregisterAllResourcesForOwner();
void sceGnmUnregisterOwnerAndResources();
void sceGnmUnregisterResource();
void sceGnmUpdateGsShader();
void sceGnmUpdateHsShader();
void sceGnmUpdatePsShader();
void sceGnmUpdatePsShader350();
void sceGnmUpdateVsShader();
void sceGnmValidateCommandBuffers();
void sceGnmValidateDisableDiagnostics();
void sceGnmValidateDisableDiagnostics2();
void sceGnmValidateDispatchCommandBuffers();
void sceGnmValidateDrawCommandBuffers();
void sceGnmValidateGetDiagnosticInfo();
void sceGnmValidateGetDiagnostics();
void sceGnmValidateGetVersion();
void sceGnmValidateOnSubmitEnabled();
void sceGnmValidateResetState();
void sceGnmValidationRegisterMemoryCheckCallback();
void sceRazorCaptureCommandBuffersOnlyImmediate();
void sceRazorCaptureCommandBuffersOnlySinceLastFlip();
void sceRazorCaptureImmediate();
void sceRazorCaptureSinceLastFlip();
void sceRazorIsLoaded();
